# sent_id = usc-006.idbf22a95c-4f37-11ef-b6fb-9208f0a214ec_2_17
# text = The court, or at its direction the voting referee, shall issue to each applicant so declared qualified a certificate identifying the holder thereof as a person so qualified.
# sent = the court or at its direction the voting referee shall issue -- to each applicant so declared qualified a certificate identifying the holder thereof as a person so qualified
# tree_by = mebwells (2024-09-10) rev. bwaldon (2024-09-13) rev. mebwells (2024-09-15) rev. bwaldon (2024-09-17) rev. nschneid (2025-01-17) rev. bwaldon (2025-02-11)
(Clause
    :Subj (NP
        :Det (DP
            :Head (D :t "the"))
        :Head (Nom
            :Head (N :t "court" :p ","))
        :Supplement (NP
            :Marker (Coordinator :t "or")
            :Supplement (PP
                :Head (P :t "at")
                :Obj (NP
                    :Det (NP
                        :Head (Nom
                            :Head (N_pro :t "its" :l "it")))
                    :Head (Nom
                        :Head (N :t "direction"))))
            :Head (NP
                :Det (DP
                    :Head (D :t "the"))
                :Head (Nom
                    :Mod (VP
                        :Head (V :t "voting" :l "vote" :xpos "VBG"))
                    :Head (N :t "referee" :p ",")))))
    :Head (VP
        :Head (V_aux :t "shall" :xpos "MD")
        :Comp (Clause
            :Head (VP
                :Head (V :t "issue" :xpos "VB")
                :Obj (y / GAP)
                :Comp (PP
                    :Head (P :t "to")
                    :Obj (NP
                        :Det (DP
                            :Head (D :t "each"))
                        :Head (Nom
                            :Head (N :t "applicant")
                            :Mod (Clause
                                :Head (VP
                                    :Mod (AdvP
                                        :Head (Adv :t "so"))
                                    :Head (VP
                                        :Head (V :t "declared" :l "declare" :xpos "VBN")
                                        :PredComp (AdjP
                                            :Head (Adj :t "qualified")))))))))
            :Postnucleus (y / NP
                :Det (DP
                    :Head (D :t "a"))
                :Head (Nom
                    :Head (N :t "certificate")
                    :Mod (Clause
                        :Head (VP
                            :Head (V :t "identifying" :l "identify" :xpos "VBG")
                            :Obj (NP
                                :Det (DP
                                    :Head (D :t "the"))
                                :Head (Nom
                                    :Head (N :t "holder")
                                    :Mod (PP
                                        :Head (P :t "thereof"))))
                            :Comp (PP
                                :Head (P :t "as")
                                :PredComp (NP
                                    :Det (DP
                                        :Head (D :t "a"))
                                    :Head (Nom
                                        :Head (N :t "person")
                                        :Mod (AdjP
                                            :Comp (AdvP
                                                :Head (Adv :t "so"))
                                            :Head (Adj :t "qualified" :p "."))))))))))))
